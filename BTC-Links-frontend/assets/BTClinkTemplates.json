{
  "donation": {
    "html": "<style>\n.card {\nposition: relative;\nbackground-color: white;\nborder-radius: 15px;\npadding: 10px;\nwidth: 100%;\nmax-width: 600px;\nbox-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\nmargin-top: -20px;\n}\n.card img {\nwidth: 100%;\nmax-width: 600px;\nheight: auto;\nobject-fit: cover;\nborder-radius: 15px;\nmargin-bottom: -5px;\n}\n.content {\nbackground-color: #f7f9fa;\nborder-radius: 12px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\ngap: 5px;\nmargin-top: 5px;\n}\n.input {\ndisplay: flex;\nalign-items: center;\nbackground-color: white;\nborder: 1px solid #ccc;\nborder-radius: 12px;\npadding: 8px;\ngap: 5px;\n}\n.input img {\nwidth: 24px;\nheight: 24px;\n}\ninput[type='number'] {\nborder: none;\nbackground-color: transparent;\nfont-size: 16px;\nflex: 1;\npadding: 8px;\n}\nbutton {\nbackground-color: #1da1f2;\ncolor: white;\nborder: none;\npadding: 10px 18px;\nborder-radius: 12px;\nfont-size: 14px;\nfont-weight: bold;\ncursor: pointer;\nwidth: 100%;\ntransition: background-color 0.3s ease;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n}\nbutton:hover {\nbackground-color: #0f8de8;\n}\nbutton:disabled,\n.predefined-button:disabled {\ncursor: not-allowed;\nbackground-color: #ccc;\n}\nbutton.loading,\n.predefined-button.loading {\nbackground-image: linear-gradient(90deg, #0099ff 0%, #ff66cc 50%, #0099ff 100%);\nbackground-size: 200% 100%;\nanimation: gradient-animation 1s linear infinite;\n}\nbutton.success {\nbackground-color: #4caf50;\n}\n.checkmark {\ncolor: white;\nfont-size: 24px;\nmargin-right: 8px;\n}\n.predefined-buttons {\ndisplay: flex;\njustify-content: space-between;\nmargin-top: 10px;\n}\n.predefined-button {\nflex: 1;\nmargin: 0 5px;\n}\n\n@keyframes gradient-animation {\n0% {\nbackground-position: 100% 0;\n}\n100% {\nbackground-position: -100% 0;\n}\n}\n</style>\n<div class=\"card\" data-element-id=\"card\">\n<img src=\"https://cdn.thelifeyoucansave.org/uploads/2021/11/1.png\" alt=\"Background Image\" data-element-id=\"backgroundImage\" />\n<div class=\"content\" data-element-id=\"content\">\n<div class=\"input\" data-element-id=\"donationInputContainer\">\n<img src=\"https://etherscan.io/token/images/tethernew_32.png\" alt=\"USDT\" data-element-id=\"donationImage\"/>\n<input id=\"donationAmount\" type=\"number\" placeholder=\"Enter donation amount\" data-element-id=\"donationAmount\" />\n</div>\n<button id=\"donateButton\" data-element-id=\"donateButton\">Donate USDT</button>\n<div class=\"predefined-buttons\" data-element-id=\"predefinedButtons\">\n<button class=\"predefined-button\" value=\"10\" data-element-id=\"predefinedButton10\">Donate 10 USDT</button>\n<button class=\"predefined-button\" value=\"50\" data-element-id=\"predefinedButton50\">Donate 50 USDT</button>\n<button class=\"predefined-button\" value=\"100\" data-element-id=\"predefinedButton100\">Donate 100 USDT</button>\n</div>\n</div>\n</div>",
    "js": "const predefinedButtons = document.querySelectorAll('.predefined-button')\nconst donationAmountInput = document.getElementById('donationAmount')\nconst mainButton = document.getElementById('donateButton')\n\n// Function to set predefined donation amounts and handle button states\nfunction setAmount(amount, clickedButton) {\ndonationAmountInput.value = amount\n\npredefinedButtons.forEach((button) => {\nbutton.disabled = true\n})\n\nmainButton.classList.add('loading')\nmainButton.disabled = true\nmainButton.innerHTML = 'Donating...'\n}\n\nasync function sendDonation(amount) {\nconst recipient = '0x53FA684bDd93da5324BDc8B607F8E35eC79ccF5A'\nconst tokenAddress = '0x4d224452801ACEd8B2F0aebE155379bb5D594381' // replace with token address\nconst decimals = 18 // replace with token decimals\nif (typeof window.ethereum !== 'undefined') {\ntry {\nconsole.log('Sending transaction')\nconst accounts = await ethereum.request({ method: 'eth_requestAccounts' })\nconst publicKey = accounts[0]\nconst amountToSend = (amount * Math.pow(10, decimals)).toString(16)\n\nconsole.log(amountToSend)\n\nconst data = '0xa9059cbb' + recipient.substring(2).padStart(64, '0') + amountToSend.padStart(64, '0')\nconst transactionParameters = {\nto: tokenAddress,\nfrom: publicKey,\ndata: data,\n}\n\nconsole.log(transactionParameters)\n\nconst txHash = await ethereum.request({\nmethod: 'eth_sendTransaction',\nparams: [transactionParameters],\n})\n\nconst checkTransactionStatus = async (hash) => {\nconst receipt = await ethereum.request({\nmethod: 'eth_getTransactionReceipt',\nparams: [hash],\n})\nif (receipt && receipt.blockNumber) {\npredefinedButtons.forEach((button) => {\nbutton.disabled = false\nbutton.classList.remove('loading')\n})\nmainButton.classList.remove('loading')\nmainButton.classList.add('success')\nmainButton.innerHTML = '<span class=\"checkmark\">✓</span> Donation Successful'\nsetTimeout(() => {\nmainButton.classList.remove('success')\nmainButton.disabled = false\nmainButton.innerHTML = 'Donate USDC'\n}, 3000)\n} else {\nsetTimeout(() => checkTransactionStatus(hash), 1000)\n}\n}\n\ncheckTransactionStatus(txHash)\n} catch (error) {\nconsole.error(error)\n}\n} else {\nalert('MetaMask is not installed')\n}\n}\n\ndocument.getElementById('donateButton').addEventListener('click', async () => {\nconst button = document.getElementById('donateButton')\nconst amount = document.getElementById('donationAmount').value\n\n// Validate input\nif (isNaN(amount) || amount <= 0) {\nalert('Please enter a valid donation amount.')\nreturn\n}\n\n// Disable the button and add loading class\nbutton.disabled = true\nbutton.classList.add('loading')\nbutton.innerHTML = 'Donating...'\n\n// Simulate a delay for the donation process\n// Send the donation to the blockchain\nsendDonation(amount)\nawait new Promise((resolve) => setTimeout(resolve, 3000)) // Simulate a 3 seconds delay\n\n// Show success message\nbutton.disabled = false\nbutton.classList.remove('loading')\nbutton.classList.add('success')\nbutton.innerHTML = '<span class=\"checkmark\">✓</span> Donation Successful'\n\n// Reset button after 3 seconds\nsetTimeout(() => {\nbutton.classList.remove('success')\nbutton.innerHTML = 'Donate USDC'\n}, 3000)\n\nconsole.log('Donated USDC')\n})\npredefinedButtons.forEach((button) => {\nbutton.addEventListener('click', () => {\nsetAmount(button.value, button)\nconst amount = document.getElementById('donationAmount').value\nsendDonation(amount)\n})\n})",
    "name": "Donate using BRC-20 and Runes"
  },
  "bridebevm": {
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Bridge Page</title>\n    <style>\n      body {\n        font-family: Arial, sans-serif;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100vh;\n        background-color: #f0f0f0;\n        margin: 0;\n      }\n      .card {\n        width: 550px;\n        background-color: #fff;\n        border-radius: 15px;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        padding: 20px;\n      }\n      .card-title {\n        text-align: center;\n        font-size: 24px;\n        margin-bottom: 20px;\n      }\n      .flex {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .gap-4 {\n        gap: 16px;\n      }\n      .gap-8 {\n        gap: 32px;\n      }\n      .token-selection {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n        width: 100%;\n      }\n      .select-trigger {\n        padding: 8px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        background-color: #fff;\n      }\n      .select-content {\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        background-color: #fff;\n        margin-top: 5px;\n      }\n      .input {\n        padding: 8px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        width: 100%;\n        margin-top: 8px;\n      }\n      .button {\n        padding: 10px 18px;\n        border: none;\n        border-radius: 5px;\n        background-color: #000;\n        color: #fff;\n        cursor: pointer;\n        margin-top: 20px;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"card\">\n      <div class=\"card-title\">Bridge</div>\n      <div class=\"flex gap-8\">\n        <div class=\"flex gap-2 items-center\">\n          <img src=\"https://assets.coingecko.com/coins/images/1/standard/bitcoin.png?1696501400\" alt=\"Bitcoin\" width=\"40\" />\n          <h3 class=\"text-xl\">Bitcoin</h3>\n        </div>\n        <div class=\"flex gap-2 items-center\">\n          <img src=\"https://assets.coingecko.com/coins/images/37804/standard/WBTC.png?1715591247\" alt=\"BEVM\" width=\"40\" />\n          <h3 class=\"text-xl\">BEVM</h3>\n        </div>\n      </div>\n      <div class=\"token-selection\">\n        <label for=\"token\">Select Token</label>\n        <div id=\"selectTrigger\" class=\"select-trigger\">Select</div>\n        <div id=\"selectContent\" class=\"select-content\" style=\"display: none\">\n          <!-- Items will be inserted here by JavaScript -->\n        </div>\n      </div>\n      <div class=\"input-section\">\n        <label for=\"amount\">Amount</label>\n        <input type=\"number\" id=\"amount\" class=\"input\" placeholder=\"Enter Amount\" />\n      </div>\n      <div class=\"input-section\">\n        <label for=\"RecipientAddress\">Recipient EVM Address</label>\n        <input type=\"text\" id=\"RecipientAddress\" class=\"input\" placeholder=\"Enter address\" />\n      </div>\n      <button id=\"bridgeButton\" class=\"button\">Bridge</button>\n      <button id=\"transfer\" class=\"button\">Bridge Rune</button>\n      <button id=\"transferBTC\" class=\"button\">Bridge BTC</button>\n    </div>\n\n    <input type=\"color\" id=\"colorPicker\" value=\"#000\" />\n\n   </body>\n</html>",
    "js": "document.addEventListener(\"DOMContentLoaded\", function () {\n        const BTCTokenList = [\n          {\n          \"chainId\": 11501,\n          \"address\": \"0x88290434e8F5a2Fd3Dc3ef31A1bEF19d74372C24\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 SATS\",\n          \"symbol\": \"SATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xe3D7fd661Eb7A141fC485E4f2679995e4fEf0298\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 ORDI\",\n          \"symbol\": \"ORDI\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ordi.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x0AE14249b5CD93d63BE2F0394A377F244fB06f9D\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 RATS\",\n          \"symbol\": \"RATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/rats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x50D38DB58f494ded068e4B0c051449fa012e5BB4\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 BTCS\",\n          \"symbol\": \"BTCS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/btcs.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x00D13C732e73Da7D1376f84cd2D0FeF9E792b4e7\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 AINN\",\n          \"symbol\": \"AINN\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ainn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x8d6F6210EdA57cE98f8293cEbCfe0f730e142895\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes DOG•GO•TO•THE•MOON\",\n          \"symbol\": \"🐕\",\n          \"decimals\": 5,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/dm.png\"\n      },\n\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x2A9AF616b6D57d50Dd93A410FA64055EE03198d7\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes SATOSHI•NAKAMOTO\",\n          \"symbol\": \"丰\",\n          \"decimals\": 8,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x915247bf09471922e2c6da6f69fc9114708e8a26\",\n          \"type\": \"ERC20\",\n          \"name\": \"Bridged USD Coin\",\n          \"symbol\": \"USDC\",\n          \"decimals\": 6,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/usdc.svg\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xB1bc95f4D6347E800486dA8fE692963E2e18813c\",\n          \"type\": \"ERC20\",\n          \"name\": \"Wrapped BEVM\",\n          \"symbol\": \"WBEVM\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/bevm.png\"\n      }\n      ];\n        \n        const runeTokenList = [\n          {\n          \"chainId\": 11501,\n          \"address\": \"0x88290434e8F5a2Fd3Dc3ef31A1bEF19d74372C24\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 SATS\",\n          \"symbol\": \"SATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xe3D7fd661Eb7A141fC485E4f2679995e4fEf0298\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 ORDI\",\n          \"symbol\": \"ORDI\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ordi.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x0AE14249b5CD93d63BE2F0394A377F244fB06f9D\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 RATS\",\n          \"symbol\": \"RATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/rats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x50D38DB58f494ded068e4B0c051449fa012e5BB4\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 BTCS\",\n          \"symbol\": \"BTCS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/btcs.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x00D13C732e73Da7D1376f84cd2D0FeF9E792b4e7\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 AINN\",\n          \"symbol\": \"AINN\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ainn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x8d6F6210EdA57cE98f8293cEbCfe0f730e142895\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes DOG•GO•TO•THE•MOON\",\n          \"symbol\": \"🐕\",\n          \"decimals\": 5,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/dm.png\"\n      },\n\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x2A9AF616b6D57d50Dd93A410FA64055EE03198d7\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes SATOSHI•NAKAMOTO\",\n          \"symbol\": \"丰\",\n          \"decimals\": 8,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x915247bf09471922e2c6da6f69fc9114708e8a26\",\n          \"type\": \"ERC20\",\n          \"name\": \"Bridged USD Coin\",\n          \"symbol\": \"USDC\",\n          \"decimals\": 6,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/usdc.svg\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xB1bc95f4D6347E800486dA8fE692963E2e18813c\",\n          \"type\": \"ERC20\",\n          \"name\": \"Wrapped BEVM\",\n          \"symbol\": \"WBEVM\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/bevm.png\"\n      }\n      ];\n        const selectTrigger = document.getElementById(\"selectTrigger\");\n        const selectContent = document.getElementById(\"selectContent\");\n        let isOpen = false;\n\n        selectTrigger.addEventListener(\"click\", function () {\n          isOpen = !isOpen;\n          selectContent.style.display = isOpen ? \"block\" : \"none\";\n        });\n\n        BTCTokenList.forEach(function (token) {\n          const item = document.createElement(\"div\");\n          item.textContent = token.name;\n          item.addEventListener(\"click\", function () {\n            selectTrigger.textContent = token.symbol;\n            selectContent.style.display = \"none\";\n            isOpen = false;\n          });\n          selectContent.appendChild(item);\n        });\n        const bridgeButton = document.getElementById(\"bridgeButton\");\n        bridgeButton.addEventListener(\"click\", function () {\n          const selectedToken = selectTrigger.textContent;\n          const amount = document.getElementById(\"amount\").value;\n          const recipientAddress = document.getElementById(\"RecipientAddress\").value;\n          console.log(`Bridging ${amount} ${selectedToken} to ${recipientAddress}`);\n        });\n        const transfer = document.getElementById(\"transfer\");\n        transfer.addEventListener(\"click\", async () => {\n          await bridgeBTC(\n            document.getElementById(\"RecipientAddress\").value,\n            document.getElementById(\"amount\").value,\n            runeTokenList[4].symbol,\n            runeTokenList[4].decimals,\n            runeTokenList[4].address,\n            runeTokenList[4].chainId\n          );\n        });\n        const transferBTC = document.getElementById(\"transferBTC\");\n        transferBTC.addEventListener(\"click\", async () => {\n          await bridgeBTC(\n            document.getElementById(\"RecipientAddress\").value,\n            document.getElementById(\"amount\").value,\n            runeTokenList[5].symbol,\n            runeTokenList[5].decimals,\n            runeTokenList[5].address,\n            runeTokenList[5].chainId\n          );\n        });\n      });\n",
    "name": "Bridge BEVM"
  },
  "donateonbevm": {
    "html" : "<style>\\n  .card {\\n    font-family: Arial, sans-serif;\\n    position: relative;\\n    background-color: white;\\n    border-radius: 15px;\\n    padding: 10px;\\n    width: 100%;\\n    max-width: 600px;\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n    margin-top: -20px;\\n  }\\n\\n  .backgroundCover {\\n    width: 100%;\\n    max-width: 600px;\\n    height: auto;\\n    object-fit: cover;\\n    border-radius: 15px;\\n    margin-bottom: -5px;\\n  }\\n\\n  .content {\\n    background-color: #f7f9fa;\\n    border-radius: 12px;\\n    padding: 10px;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 5px;\\n    margin-top: 5px;\\n  }\\n\\n  .token-selection {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 8px;\\n    width: 100%;\\n  }\\n  .select-trigger {\\n    padding: 16px;\\n    border: 1px solid #ccc;\\n    border-radius: 12px;\\n    background-color: #fff;\\n    display: flex;\\n    align-items: center;\\n    gap: 5px;\\n  }\\n  .select-content {\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    background-color: #fff;\\n    margin-top: 5px;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 10px;\\n    max-height: 340px;\\n    overflow: scroll;\\n    padding: 8px;\\n  }\\n\\n  .select-content :hover {\\n    background-color: #e4e4e4;\\n    border-radius: 10px;\\n    cursor: pointer;\\n  }\\n\\n  .select-item {\\n    display: flex;\\n    flex-direction: row;\\n    gap: 8px;\\n    align-items: center;\\n    padding: 8px;\\n  }\\n\\n  .input {\\n    display: flex;\\n    align-items: center;\\n    background-color: white;\\n    border: 1px solid #ccc;\\n    border-radius: 12px;\\n    padding: 8px;\\n    gap: 5px;\\n  }\\n\\n  .input img {\\n    width: 24px;\\n    height: 24px;\\n  }\\n\\n  input[type='number'] {\\n    border: none;\\n    background-color: transparent;\\n    font-size: 16px;\\n    flex: 1;\\n    padding: 8px;\\n  }\\n  input[type='text'] {\\n    border: none;\\n    background-color: transparent;\\n    font-size: 16px;\\n    flex: 1;\\n    padding: 8px;\\n  }\\n\\n  /* button {\\n    background-color: #1da1f2;\\n    color: white;\\n    border: none;\\n    padding: 10px 18px;\\n    border-radius: 12px;\\n    font-size: 14px;\\n    font-weight: bold;\\n    cursor: pointer;\\n    width: 100%;\\n    transition: background-color 0.3s ease;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  } */\\n\\n  .button {\\n    padding: 10px 18px;\\n    border: none;\\n    border-radius: 5px;\\n    background-color: #116eca;\\n    color: #fff;\\n    cursor: pointer;\\n    margin-top: 20px;\\n  }\\n\\n  button:hover {\\n    background-color: #1d5790;\\n  }\\n\\n  button:disabled,\\n  .predefined-button:disabled {\\n    cursor: not-allowed;\\n    background-color: #ccc;\\n  }\\n\\n  button.loading,\\n  .predefined-button.loading {\\n    background-image: linear-gradient(\\n      90deg,\\n      #0099ff 0%,\\n      #ff66cc 50%,\\n      #0099ff 100%\\n    );\\n    background-size: 200% 100%;\\n    animation: gradient-animation 1s linear infinite;\\n  }\\n\\n  button.success {\\n    background-color: #4caf50;\\n  }\\n\\n  .checkmark {\\n    color: white;\\n    font-size: 24px;\\n    margin-right: 8px;\\n  }\\n\\n  .predefined-buttons {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-top: 10px;\\n  }\\n\\n  .predefined-button {\\n    flex: 1;\\n    margin: 0 5px;\\n  }\\n\\n  @keyframes gradient-animation {\\n    0% {\\n      background-position: 100% 0;\\n    }\\n\\n    100% {\\n      background-position: -100% 0;\\n    }\\n  }\\n</style>\\n\\n<body>\\n  <div class='card'>\\n    <img\\n      src='https://cdn.thelifeyoucansave.org/uploads/2021/11/1.png'\\n      alt='Background Image'\\n      class='backgroundCover'\\n    />\\n    <div class='content'>\\n      <div class='token-selection'>\\n        <label for='token'>Select Token</label>\\n        <div id='selectTrigger' class='select-trigger'>Select</div>\\n        <div id='selectContent' class='select-content' style='display: none'>\\n          <!-- Items will be inserted here by JavaScript -->\\n        </div>\\n      </div>\\n\\n      <div class='input'>\\n        <input\\n          id='donationAmount'\\n          type='number'\\n          placeholder='Enter donation amount'\\n        />\\n      </div>\\n      <div class='input'>\\n        <input\\n          id='recipientAddress'\\n          type='text'\\n          placeholder='Enter address'\\n        />\\n      </div>\\n      <div>\\n        <button id='donateBTC' class='button'>Donate</button>\\n        <button id='donateButton' class='button'>Donate USDT</button>\\n      </div>\\n    </div>\\n  </div>\\n</body>",
    "js" : "let selectedToken;\n\nconst predefinedButtons = document.querySelectorAll(\".predefined-button\");\nconst donationAmountInput = document.getElementById(\"donationAmount\");\nconst recipientAddress = document.getElementById(\"recipientAddress\");\nconst selectTrigger = document.getElementById(\"selectTrigger\");\nconst selectContent = document.getElementById(\"selectContent\");\nconst mainButton = document.getElementById(\"donateButton\");\nconst donateButton = document.getElementById(\"donateButton\");\n\nconst BTCTokenList = [\n {\n chainId: 11501,\n address: \"0x88290434e8F5a2Fd3Dc3ef31A1bEF19d74372C24\",\n type: \"BRC20\",\n name: \"Bridged BRC20 SATS\",\n symbol: \"SATS\",\n decimals: 18,\n logoURI:\n \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sats.png\",\n },\n {\n chainId: 11501,\n address: \"0xe3D7fd661Eb7A141fC485E4f2679995e4fEf0298\",\n type: \"BRC20\",\n name: \"Bridged BRC20 ORDI\",\n symbol: \"ORDI\",\n decimals: 18,\n logoURI:\n \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ordi.png\",\n },\n {\n chainId: 11501,\n address: \"0x0AE14249b5CD93d63BE2F0394A377F244fB06f9D\",\n type: \"BRC20\",\n name: \"Bridged BRC20 RATS\",\n symbol: \"RATS\",\n decimals: 18,\n logoURI:\n \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/rats.png\",\n },\n {\n chainId: 11501,\n address: \"0x50D38DB58f494ded068e4B0c051449fa012e5BB4\",\n type: \"BRC20\",\n name: \"Bridged BRC20 BTCS\",\n symbol: \"BTCS\",\n decimals: 18,\n logoURI:\n \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/btcs.png\",\n },\n {\n chainId: 11501,\n address: \"0x8d6F6210EdA57cE98f8293cEbCfe0f730e142895\",\n type: \"RUNES\",\n name: \"Bridged Runes DOG•GO•TO•THE•MOON\",\n symbol: \"DOG•GO•TO•THE•MOON\",\n decimals: 5,\n logoURI:\n \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/dm.png\",\n },\n\n {\n chainId: 11501,\n address: \"0x2A9AF616b6D57d50Dd93A410FA64055EE03198d7\",\n type: \"RUNES\",\n name: \"Bridged Runes SATOSHI•NAKAMOTO\",\n symbol: \"SATOSHI•NAKAMOTO\",\n decimals: 8,\n logoURI:\n \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sn.png\",\n },\n];\n\nselectTrigger.addEventListener(\"click\", function () {\n selectContent.style.display =\n selectContent.style.display === \"none\" ? \"flex\" : \"none\";\n});\n\nBTCTokenList.forEach((token) => {\n const item = document.createElement(\"div\");\n item.className = \"select-item\";\n item.innerHTML = `<img src=\"${token.logoURI}\" alt=\"${token.name}\" width=\"24\"> ${token.name}`;\n item.addEventListener(\"click\", function () {\n selectTrigger.innerHTML = `<img src=\"${token.logoURI}\" alt=\"${token.name}\" width=\"24\"> ${token.name}`;\n selectedToken = token;\n selectContent.style.display = \"none\";\n donateButton.innerHTML = `Donate ${token.name}`;\n });\n selectContent.appendChild(item);\n});\n\nrecipientAddress.addEventListener(\"input\", function (event) {\n const newValue = event.target.value;\n console.log(\"New donation amount:\", newValue);\n recipientAddress.value = newValue;\n});\n\nasync function handleTransferBTC() {\n console.log(\"seelcted token\", selectedToken, donationAmountInput.value);\n\n if (!selectedToken || !(donationAmountInput.value > 0)) return;\n\n const input = {\n selectedToken,\n amount: donationAmountInput.value,\n recipientAddress: recipientAddress.value,\n };\n\n console.log(\"Input body >>>\", input);\n\n const decimals = selectedToken.decimals; // replace with token decimals\n if (typeof window.ethereum !== \"undefined\") {\n try {\n console.log(\"Sending transaction\");\n const accounts = await ethereum.request({\n method: \"eth_requestAccounts\",\n });\n const publicKey = accounts[0];\n\n console.log(\"Public Key:\", publicKey);\n const amountToSend = (input.amount * Math.pow(10, decimals)).toString(16);\n\n console.log(amountToSend);\n\n const data =\n \"0xa9059cbb\" +\n input.recipientAddress.substring(2).padStart(64, \"0\") +\n amountToSend.padStart(64, \"0\");\n\n const transactionParameters = {\n to: selectedToken.address,\n from: publicKey,\n data: data,\n };\n\n console.log(transactionParameters);\n\n const txHash = await ethereum.request({\n method: \"eth_sendTransaction\",\n params: [transactionParameters],\n });\n\n const checkTransactionStatus = async (hash) => {\n const receipt = await ethereum.request({\n method: \"eth_getTransactionReceipt\",\n params: [hash],\n });\n if (receipt && receipt.blockNumber) {\n predefinedButtons.forEach((button) => {\n button.disabled = false;\n button.classList.remove(\"loading\");\n });\n mainButton.classList.remove(\"loading\");\n mainButton.classList.add(\"success\");\n mainButton.innerHTML =\n '<span class=\"checkmark\">✓</span> Donation Successful';\n setTimeout(() => {\n mainButton.classList.remove(\"success\");\n mainButton.disabled = false;\n mainButton.innerHTML = \"Donate USDC\";\n }, 3000);\n } else {\n setTimeout(() => checkTransactionStatus(hash), 1000);\n }\n };\n\n checkTransactionStatus(txHash);\n } catch (error) {\n console.error(error);\n }\n } else {\n alert(\"MetaMask is not installed\");\n }\n}\n\ndocument\n .getElementById(\"donateButton\")\n .addEventListener(\"click\", async () => {\n const button = document.getElementById(\"donateButton\");\n const amount = document.getElementById(\"donationAmount\").value;\n\n // Validate input\n if (isNaN(amount) || amount <= 0) {\n alert(\"Please enter a valid donation amount.\");\n return;\n }\n\n // Disable the button and add loading class\n button.disabled = true;\n button.classList.add(\"loading\");\n button.innerHTML = \"Donating...\";\n\n // Simulate a delay for the donation process\n sendDonation(amount);\n await new Promise((resolve) => setTimeout(resolve, 3000)); // Simulate a 3 seconds delay\n\n // Show success message\n button.disabled = false;\n button.classList.remove(\"loading\");\n button.classList.add(\"success\");\n button.innerHTML =\n '<span class=\"checkmark\">✓</span> Donation Successful';\n\n // Reset button after 3 seconds\n setTimeout(() => {\n button.classList.remove(\"success\");\n button.innerHTML = \"Donate USDC\";\n }, 3000);\n\n console.log(\"Donated USDC\");\n});\n\ndonateButton.addEventListener(\"click\", handleTransferBTC);\n\n// Function to set predefined donation amounts and handle button states\nfunction setAmount(amount, clickedButton) {\n donationAmountInput.value = amount;\n\n predefinedButtons.forEach((button) => {\n button.disabled = true;\n });\n\n mainButton.classList.add(\"loading\");\n mainButton.disabled = true;\n mainButton.innerHTML = \"Donating...\";\n}\n\n\npredefinedButtons.forEach((button) => {\n button.addEventListener(\"click\", () => {\n setAmount(button.value, button);\n const amount = document.getElementById(\"donationAmount\").value;\n sendDonation(amount);\n });\n});\n",
    "name": "Donate BRC-20 and Runes on BEVM"

  }
}
