{
  "bridge": {
      "html": "<style>\n.bridge-card {\nbackground-color: white;\nborder-radius: 15px;\npadding: 10px;\nwidth: 100%;\nbox-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\nalign-self: center;\nmax-width: 600px;\n}\n.bridge-card img {\nwidth: 100%;\nheight: auto;\nmax-height: 250px;\nobject-fit: contain;\nborder-radius: 12px;\nmargin-bottom: 10px;\n}\n.bridge-content {\nbackground-color: #f7f9fa;\nborder-radius: 12px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n}\n.bridge-row {\ndisplay: flex;\ngap: 10px;\nalign-items: center;\n}\n.bridge-select-container {\ndisplay: flex;\nflex-direction: column;\nflex: 1;\n}\n.bridge-select-label {\nfont-size: 12px;\ncolor: #555;\nmargin-bottom: 3px;\n}\n.bridge-input, .bridge-select {\ndisplay: flex;\nalign-items: center;\nbackground-color: white;\nborder: 1px solid #ccc;\nborder-radius: 12px;\npadding: 5px;\nflex: 1;\n}\n.bridge-input img, .bridge-select img {\nwidth: 24px;\nheight: 24px;\nmargin-right: 8px;\n}\ninput, select {\nborder: none;\nbackground-color: transparent;\nfont-size: 14px;\nwidth: 100%;\npadding: 5px;\n}\nselect {\nappearance: none;\n-moz-appearance: none;\n-webkit-appearance: none;\nbackground: transparent;\ncursor: pointer;\n}\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n-webkit-appearance: none;\nmargin: 0;\n}\ninput[type=\"number\"] {\n-moz-appearance: textfield;\n}\n@keyframes gradient-animation {\n0% { background-position: 100% 0; }\n100% { background-position: -100% 0; }\n}\nbutton {\nbackground-color: #1da1f2;\ncolor: white;\nborder: none;\npadding: 12px 20px;\nborder-radius: 12px;\nfont-size: 16px;\nfont-weight: bold;\ncursor: pointer;\nwidth: 100%;\ntransition: background-color 0.3s ease;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n}\nbutton:disabled {\ncursor: not-allowed;\n}\nbutton.loading {\nbackground-image: linear-gradient(90deg, #0099ff 0%, #ff66cc 50%, #0099ff 100%);\nbackground-size: 200% 100%;\nanimation: gradient-animation 1s linear infinite;\n}\nbutton.success {\nbackground-color: #4CAF50;\n}\n.checkmark {\ncolor: white;\nfont-size: 24px;\nmargin-right: 8px;\n}\n</style>\n<div class=\"bridge-card\" data-element-id=\"bridge-card\">\n<img src=\"https://zengo.com/wp-content/uploads/USDC-to-Chainlink.png\" alt=\"Bridge USDC\"/>\n<div class=\"bridge-content\" data-element-id=\"bridge-content\">\n<div class=\"bridge-row\" data-element-id=\"bridge-row\">\n<div class=\"bridge-select-container\" data-element-id=\"fromNetworkContainer\">\n<div class=\"bridge-select-label\" data-element-id=\"fromNetworkLabel\">From Network</div>\n<div class=\"bridge-select\" data-element-id=\"fromNetworkSelect\">\n<img src=\"https://cryptologos.cc/logos/ethereum-eth-logo.png\" alt=\"From Network\"/>\n<select id=\"fromNetwork\" data-element-id=\"fromNetwork\">\n<option value=\"eth\">Ethereum</option>\n<option value=\"avax\">Avalanche</option>\n<option value=\"bsc\">Binance Smart Chain</option>\n</select>\n</div>\n</div>\n<div class=\"bridge-select-container\" data-element-id=\"toNetworkContainer\">\n<div class=\"bridge-select-label\" data-element-id=\"toNetworkLabel\">To Network</div>\n<div class=\"bridge-select\" data-element-id=\"toNetworkSelect\">\n<img src=\"https://cryptologos.cc/logos/ethereum-eth-logo.png\" alt=\"To Network\"/>\n<select id=\"toNetwork\" data-element-id=\"toNetwork\">\n<option value=\"eth\">Ethereum</option>\n<option value=\"avax\">Avalanche</option>\n<option value=\"bsc\">Binance Smart Chain</option>\n</select>\n</div>\n</div>\n</div>\n<div class=\"bridge-input\" data-element-id=\"amountInputContainer\">\n<img src=\"https://cryptologos.cc/logos/usd-coin-usdc-logo.png\" alt=\"USDC\"/>\n<input id=\"amountInput\" type=\"number\" placeholder=\"Amount\" data-element-id=\"amountInput\"/>\n</div>\n<button id=\"bridgeButton\" data-element-id=\"bridgeButton\">Bridge USDC</button>\n</div>\n</div>",
      "js": "console.log('USDC Bridge');\ndocument.getElementById('fromNetwork').addEventListener('click', function(event) {\nevent.stopPropagation();\n});\ndocument.getElementById('toNetwork').addEventListener('click', function(event) {\nevent.stopPropagation();\n});\ndocument.getElementById('bridgeButton').addEventListener('click', async () => {\nconst button = document.getElementById('bridgeButton');\nconst fromNetwork = document.getElementById('fromNetwork').value;\nconst toNetwork = document.getElementById('toNetwork').value;\nconst amount = document.getElementById('amountInput').value;\nbutton.disabled = true;\nbutton.classList.add('loading');\nbutton.innerHTML = 'Bridging...';\nawait new Promise(resolve => setTimeout(resolve, 5000));\nbutton.classList.remove('loading');\nbutton.classList.add('success');\nbutton.innerHTML = '<span class=\"checkmark\">✓</span> Bridging Successful';\nsetTimeout(() => {\nbutton.disabled = false;\nbutton.classList.remove('success');\nbutton.innerHTML = 'Bridge USDC';\n}, 3000);\nconsole.log(`Bridged ${amount} USDC from ${fromNetwork} to ${toNetwork}`);\n});",
      "name":"Bridge"
  },
  "donation": {
    "html": "<style>\n.card {\nposition: relative;\nbackground-color: white;\nborder-radius: 15px;\npadding: 10px;\nwidth: 100%;\nmax-width: 600px;\nbox-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\nmargin-top: -20px;\n}\n.card img {\nwidth: 100%;\nmax-width: 600px;\nheight: auto;\nobject-fit: cover;\nborder-radius: 15px;\nmargin-bottom: -5px;\n}\n.content {\nbackground-color: #f7f9fa;\nborder-radius: 12px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\ngap: 5px;\nmargin-top: 5px;\n}\n.input {\ndisplay: flex;\nalign-items: center;\nbackground-color: white;\nborder: 1px solid #ccc;\nborder-radius: 12px;\npadding: 8px;\ngap: 5px;\n}\n.input img {\nwidth: 24px;\nheight: 24px;\n}\ninput[type='number'] {\nborder: none;\nbackground-color: transparent;\nfont-size: 16px;\nflex: 1;\npadding: 8px;\n}\nbutton {\nbackground-color: #1da1f2;\ncolor: white;\nborder: none;\npadding: 10px 18px;\nborder-radius: 12px;\nfont-size: 14px;\nfont-weight: bold;\ncursor: pointer;\nwidth: 100%;\ntransition: background-color 0.3s ease;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n}\nbutton:hover {\nbackground-color: #0f8de8;\n}\nbutton:disabled,\n.predefined-button:disabled {\ncursor: not-allowed;\nbackground-color: #ccc;\n}\nbutton.loading,\n.predefined-button.loading {\nbackground-image: linear-gradient(90deg, #0099ff 0%, #ff66cc 50%, #0099ff 100%);\nbackground-size: 200% 100%;\nanimation: gradient-animation 1s linear infinite;\n}\nbutton.success {\nbackground-color: #4caf50;\n}\n.checkmark {\ncolor: white;\nfont-size: 24px;\nmargin-right: 8px;\n}\n.predefined-buttons {\ndisplay: flex;\njustify-content: space-between;\nmargin-top: 10px;\n}\n.predefined-button {\nflex: 1;\nmargin: 0 5px;\n}\n\n@keyframes gradient-animation {\n0% {\nbackground-position: 100% 0;\n}\n100% {\nbackground-position: -100% 0;\n}\n}\n</style>\n<div class=\"card\" data-element-id=\"card\">\n<img src=\"https://cdn.thelifeyoucansave.org/uploads/2021/11/1.png\" alt=\"Background Image\" data-element-id=\"backgroundImage\" />\n<div class=\"content\" data-element-id=\"content\">\n<div class=\"input\" data-element-id=\"donationInputContainer\">\n<img src=\"https://etherscan.io/token/images/tethernew_32.png\" alt=\"USDT\" data-element-id=\"donationImage\"/>\n<input id=\"donationAmount\" type=\"number\" placeholder=\"Enter donation amount\" data-element-id=\"donationAmount\" />\n</div>\n<button id=\"donateButton\" data-element-id=\"donateButton\">Donate USDT</button>\n<div class=\"predefined-buttons\" data-element-id=\"predefinedButtons\">\n<button class=\"predefined-button\" value=\"10\" data-element-id=\"predefinedButton10\">Donate 10 USDT</button>\n<button class=\"predefined-button\" value=\"50\" data-element-id=\"predefinedButton50\">Donate 50 USDT</button>\n<button class=\"predefined-button\" value=\"100\" data-element-id=\"predefinedButton100\">Donate 100 USDT</button>\n</div>\n</div>\n</div>",
    "js": "const predefinedButtons = document.querySelectorAll('.predefined-button')\nconst donationAmountInput = document.getElementById('donationAmount')\nconst mainButton = document.getElementById('donateButton')\n\n// Function to set predefined donation amounts and handle button states\nfunction setAmount(amount, clickedButton) {\ndonationAmountInput.value = amount\n\npredefinedButtons.forEach((button) => {\nbutton.disabled = true\n})\n\nmainButton.classList.add('loading')\nmainButton.disabled = true\nmainButton.innerHTML = 'Donating...'\n}\n\nasync function sendDonation(amount) {\nconst recipient = '0x53FA684bDd93da5324BDc8B607F8E35eC79ccF5A'\nconst tokenAddress = '0x4d224452801ACEd8B2F0aebE155379bb5D594381' // replace with token address\nconst decimals = 18 // replace with token decimals\nif (typeof window.ethereum !== 'undefined') {\ntry {\nconsole.log('Sending transaction')\nconst accounts = await ethereum.request({ method: 'eth_requestAccounts' })\nconst publicKey = accounts[0]\nconst amountToSend = (amount * Math.pow(10, decimals)).toString(16)\n\nconsole.log(amountToSend)\n\nconst data = '0xa9059cbb' + recipient.substring(2).padStart(64, '0') + amountToSend.padStart(64, '0')\nconst transactionParameters = {\nto: tokenAddress,\nfrom: publicKey,\ndata: data,\n}\n\nconsole.log(transactionParameters)\n\nconst txHash = await ethereum.request({\nmethod: 'eth_sendTransaction',\nparams: [transactionParameters],\n})\n\nconst checkTransactionStatus = async (hash) => {\nconst receipt = await ethereum.request({\nmethod: 'eth_getTransactionReceipt',\nparams: [hash],\n})\nif (receipt && receipt.blockNumber) {\npredefinedButtons.forEach((button) => {\nbutton.disabled = false\nbutton.classList.remove('loading')\n})\nmainButton.classList.remove('loading')\nmainButton.classList.add('success')\nmainButton.innerHTML = '<span class=\"checkmark\">✓</span> Donation Successful'\nsetTimeout(() => {\nmainButton.classList.remove('success')\nmainButton.disabled = false\nmainButton.innerHTML = 'Donate USDC'\n}, 3000)\n} else {\nsetTimeout(() => checkTransactionStatus(hash), 1000)\n}\n}\n\ncheckTransactionStatus(txHash)\n} catch (error) {\nconsole.error(error)\n}\n} else {\nalert('MetaMask is not installed')\n}\n}\n\ndocument.getElementById('donateButton').addEventListener('click', async () => {\nconst button = document.getElementById('donateButton')\nconst amount = document.getElementById('donationAmount').value\n\n// Validate input\nif (isNaN(amount) || amount <= 0) {\nalert('Please enter a valid donation amount.')\nreturn\n}\n\n// Disable the button and add loading class\nbutton.disabled = true\nbutton.classList.add('loading')\nbutton.innerHTML = 'Donating...'\n\n// Simulate a delay for the donation process\n// Send the donation to the blockchain\nsendDonation(amount)\nawait new Promise((resolve) => setTimeout(resolve, 3000)) // Simulate a 3 seconds delay\n\n// Show success message\nbutton.disabled = false\nbutton.classList.remove('loading')\nbutton.classList.add('success')\nbutton.innerHTML = '<span class=\"checkmark\">✓</span> Donation Successful'\n\n// Reset button after 3 seconds\nsetTimeout(() => {\nbutton.classList.remove('success')\nbutton.innerHTML = 'Donate USDC'\n}, 3000)\n\nconsole.log('Donated USDC')\n})\npredefinedButtons.forEach((button) => {\nbutton.addEventListener('click', () => {\nsetAmount(button.value, button)\nconst amount = document.getElementById('donationAmount').value\nsendDonation(amount)\n})\n})",
    "name":"Donate using BRC-20 and Runes"
  },
  "bridebevm": {
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Bridge Page</title>\n    <style>\n      body {\n        font-family: Arial, sans-serif;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100vh;\n        background-color: #f0f0f0;\n        margin: 0;\n      }\n      .card {\n        width: 550px;\n        background-color: #fff;\n        border-radius: 15px;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        padding: 20px;\n      }\n      .card-title {\n        text-align: center;\n        font-size: 24px;\n        margin-bottom: 20px;\n      }\n      .flex {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .gap-4 {\n        gap: 16px;\n      }\n      .gap-8 {\n        gap: 32px;\n      }\n      .token-selection {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n        width: 100%;\n      }\n      .select-trigger {\n        padding: 8px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        background-color: #fff;\n      }\n      .select-content {\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        background-color: #fff;\n        margin-top: 5px;\n      }\n      .input {\n        padding: 8px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        width: 100%;\n        margin-top: 8px;\n      }\n      .button {\n        padding: 10px 18px;\n        border: none;\n        border-radius: 5px;\n        background-color: #000;\n        color: #fff;\n        cursor: pointer;\n        margin-top: 20px;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"card\">\n      <div class=\"card-title\">Bridge</div>\n      <div class=\"flex gap-8\">\n        <div class=\"flex gap-2 items-center\">\n          <img src=\"https://assets.coingecko.com/coins/images/1/standard/bitcoin.png?1696501400\" alt=\"Bitcoin\" width=\"40\" />\n          <h3 class=\"text-xl\">Bitcoin</h3>\n        </div>\n        <div class=\"flex gap-2 items-center\">\n          <img src=\"https://assets.coingecko.com/coins/images/37804/standard/WBTC.png?1715591247\" alt=\"BEVM\" width=\"40\" />\n          <h3 class=\"text-xl\">BEVM</h3>\n        </div>\n      </div>\n      <div class=\"token-selection\">\n        <label for=\"token\">Select Token</label>\n        <div id=\"selectTrigger\" class=\"select-trigger\">Select</div>\n        <div id=\"selectContent\" class=\"select-content\" style=\"display: none\">\n          <!-- Items will be inserted here by JavaScript -->\n        </div>\n      </div>\n      <div class=\"input-section\">\n        <label for=\"amount\">Amount</label>\n        <input type=\"number\" id=\"amount\" class=\"input\" placeholder=\"Enter Amount\" />\n      </div>\n      <div class=\"input-section\">\n        <label for=\"RecipientAddress\">Recipient EVM Address</label>\n        <input type=\"text\" id=\"RecipientAddress\" class=\"input\" placeholder=\"Enter address\" />\n      </div>\n      <button id=\"bridgeButton\" class=\"button\">Bridge</button>\n      <button id=\"transfer\" class=\"button\">Bridge Rune</button>\n      <button id=\"transferBTC\" class=\"button\">Bridge BTC</button>\n    </div>\n\n    <input type=\"color\" id=\"colorPicker\" value=\"#000\" />\n\n   </body>\n</html>",
    "js" : "document.addEventListener(\"DOMContentLoaded\", function () {\n        const BTCTokenList = [\n          {\n          \"chainId\": 11501,\n          \"address\": \"0x88290434e8F5a2Fd3Dc3ef31A1bEF19d74372C24\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 SATS\",\n          \"symbol\": \"SATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xe3D7fd661Eb7A141fC485E4f2679995e4fEf0298\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 ORDI\",\n          \"symbol\": \"ORDI\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ordi.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x0AE14249b5CD93d63BE2F0394A377F244fB06f9D\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 RATS\",\n          \"symbol\": \"RATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/rats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x50D38DB58f494ded068e4B0c051449fa012e5BB4\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 BTCS\",\n          \"symbol\": \"BTCS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/btcs.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x00D13C732e73Da7D1376f84cd2D0FeF9E792b4e7\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 AINN\",\n          \"symbol\": \"AINN\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ainn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x8d6F6210EdA57cE98f8293cEbCfe0f730e142895\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes DOG•GO•TO•THE•MOON\",\n          \"symbol\": \"🐕\",\n          \"decimals\": 5,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/dm.png\"\n      },\n\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x2A9AF616b6D57d50Dd93A410FA64055EE03198d7\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes SATOSHI•NAKAMOTO\",\n          \"symbol\": \"丰\",\n          \"decimals\": 8,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x915247bf09471922e2c6da6f69fc9114708e8a26\",\n          \"type\": \"ERC20\",\n          \"name\": \"Bridged USD Coin\",\n          \"symbol\": \"USDC\",\n          \"decimals\": 6,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/usdc.svg\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xB1bc95f4D6347E800486dA8fE692963E2e18813c\",\n          \"type\": \"ERC20\",\n          \"name\": \"Wrapped BEVM\",\n          \"symbol\": \"WBEVM\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/bevm.png\"\n      }\n      ];\n        \n        const runeTokenList = [\n          {\n          \"chainId\": 11501,\n          \"address\": \"0x88290434e8F5a2Fd3Dc3ef31A1bEF19d74372C24\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 SATS\",\n          \"symbol\": \"SATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xe3D7fd661Eb7A141fC485E4f2679995e4fEf0298\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 ORDI\",\n          \"symbol\": \"ORDI\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ordi.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x0AE14249b5CD93d63BE2F0394A377F244fB06f9D\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 RATS\",\n          \"symbol\": \"RATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/rats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x50D38DB58f494ded068e4B0c051449fa012e5BB4\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 BTCS\",\n          \"symbol\": \"BTCS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/btcs.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x00D13C732e73Da7D1376f84cd2D0FeF9E792b4e7\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 AINN\",\n          \"symbol\": \"AINN\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ainn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x8d6F6210EdA57cE98f8293cEbCfe0f730e142895\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes DOG•GO•TO•THE•MOON\",\n          \"symbol\": \"🐕\",\n          \"decimals\": 5,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/dm.png\"\n      },\n\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x2A9AF616b6D57d50Dd93A410FA64055EE03198d7\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes SATOSHI•NAKAMOTO\",\n          \"symbol\": \"丰\",\n          \"decimals\": 8,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x915247bf09471922e2c6da6f69fc9114708e8a26\",\n          \"type\": \"ERC20\",\n          \"name\": \"Bridged USD Coin\",\n          \"symbol\": \"USDC\",\n          \"decimals\": 6,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/usdc.svg\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xB1bc95f4D6347E800486dA8fE692963E2e18813c\",\n          \"type\": \"ERC20\",\n          \"name\": \"Wrapped BEVM\",\n          \"symbol\": \"WBEVM\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/bevm.png\"\n      }\n      ];\n        const selectTrigger = document.getElementById(\"selectTrigger\");\n        const selectContent = document.getElementById(\"selectContent\");\n        let isOpen = false;\n\n        selectTrigger.addEventListener(\"click\", function () {\n          isOpen = !isOpen;\n          selectContent.style.display = isOpen ? \"block\" : \"none\";\n        });\n\n        BTCTokenList.forEach(function (token) {\n          const item = document.createElement(\"div\");\n          item.textContent = token.name;\n          item.addEventListener(\"click\", function () {\n            selectTrigger.textContent = token.symbol;\n            selectContent.style.display = \"none\";\n            isOpen = false;\n          });\n          selectContent.appendChild(item);\n        });\n        const bridgeButton = document.getElementById(\"bridgeButton\");\n        bridgeButton.addEventListener(\"click\", function () {\n          const selectedToken = selectTrigger.textContent;\n          const amount = document.getElementById(\"amount\").value;\n          const recipientAddress = document.getElementById(\"RecipientAddress\").value;\n          console.log(`Bridging ${amount} ${selectedToken} to ${recipientAddress}`);\n        });\n        const transfer = document.getElementById(\"transfer\");\n        transfer.addEventListener(\"click\", async () => {\n          await bridgeBTC(\n            document.getElementById(\"RecipientAddress\").value,\n            document.getElementById(\"amount\").value,\n            runeTokenList[4].symbol,\n            runeTokenList[4].decimals,\n            runeTokenList[4].address,\n            runeTokenList[4].chainId\n          );\n        });\n        const transferBTC = document.getElementById(\"transferBTC\");\n        transferBTC.addEventListener(\"click\", async () => {\n          await bridgeBTC(\n            document.getElementById(\"RecipientAddress\").value,\n            document.getElementById(\"amount\").value,\n            runeTokenList[5].symbol,\n            runeTokenList[5].decimals,\n            runeTokenList[5].address,\n            runeTokenList[5].chainId\n          );\n        });\n      });\n",
    "name":"Bridge BEVM"
  }
}